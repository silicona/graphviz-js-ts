"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.componentes = void 0;
exports.componentes = {
    AppController: {
        deps: ["AppService"],
        methods: {},
    },
    AppModule: {
        imports: ["ConfigModule", "CatsModule", "ContactoModule", "UsuarioModule"],
        controllers: ["AppController"],
        providers: ["AppService"],
        exports: [""],
    },
    AppService: {
        deps: [""],
        methods: {
            getHello: {
                public: true,
                async: false,
                name: "getHello",
                params: null,
                return: "string",
                lines: 2,
            },
        },
    },
    CatsModule: {
        imports: [""],
        controllers: ["CatController"],
        providers: ["CatsService"],
        exports: [""],
    },
    CatController: {
        e2e: "cats",
        deps: ["CatsService"],
        methods: {
            findAll: {
                public: true,
                async: true,
                name: "findAll",
                params: null,
                return: "Cat[]",
                lines: 3,
            },
            create: {
                public: true,
                async: false,
                name: "create",
                params: ["@Body("],
                return: "crearGatoDtoCreateCatDto)string",
                lines: 2,
            },
            update: {
                public: true,
                async: true,
                name: "update",
                params: ["@Body("],
                return: "actualizarGatoCreateCatDto)",
                lines: 2,
            },
            observarCanal: {
                public: true,
                async: false,
                name: "observarCanal",
                params: null,
                return: "Observableany[]",
                lines: 2,
            },
            delete: {
                public: true,
                async: false,
                name: "delete",
                params: null,
                return: "void",
                lines: 2,
            },
        },
    },
    CatsService: {
        deps: ["Cat"],
        methods: {
            create: {
                public: true,
                async: false,
                name: "create",
                params: ["cat(Cat)"],
                return: "",
                lines: 2,
            },
            findAll: {
                public: true,
                async: false,
                name: "findAll",
                params: null,
                return: "Cat[]",
                lines: 2,
            },
        },
    },
    ContactoModule: {
        imports: ["UsuarioModule"],
        controllers: ["ContactoController"],
        providers: ["ContactoService"],
        exports: [""],
    },
    ContactoController: {
        e2e: "contactos",
        deps: ["ContactoService"],
        methods: {
            get: {
                public: true,
                async: true,
                name: "get",
                params: null,
                return: "any",
                lines: 3,
            },
        },
    },
    ContactoBaseController: {
        e2e: "contactos",
        deps: ["ContactoBaseService"],
        methods: {
            get: {
                public: true,
                async: true,
                name: "get",
                params: null,
                return: "any",
                lines: 3,
            },
        },
    },
    ContactoEntity: {
        campos: {
            id: {
                primary: true,
                type: "int",
                name: "idContacto",
                nullable: false,
                entityName: "id",
                entityType: "number",
            },
            idUsuario: {
                primary: false,
                type: "int",
                name: "idUsuario",
                nullable: false,
                entityName: "idUsuario",
                entityType: "number",
            },
            name: {
                primary: false,
                type: "varchar",
                name: "nombre",
                nullable: false,
                entityName: "name",
                entityType: "string",
            },
            email: {
                primary: false,
                type: "varchar",
                name: "email",
                nullable: false,
                entityName: "email",
                entityType: "string",
            },
            phone: {
                primary: false,
                type: "int",
                name: "telefono",
                nullable: false,
                entityName: "phone",
                entityType: "number",
            },
        },
        indexs: {},
        tabla: "contactos",
        bd: "DefaultDB",
    },
    ContactoService: {
        deps: ["ContactoEntity", "UsuarioService"],
        methods: {
            getContactos: {
                public: true,
                async: true,
                name: "getContactos",
                params: null,
                return: "any",
                lines: 6,
            },
            getContactosCompletosLeft: {
                public: true,
                async: true,
                name: "getContactosCompletosLeft",
                params: null,
                return: "any",
                lines: 6,
            },
            getContactoByIdUsuario: {
                public: true,
                async: true,
                name: "getContactoByIdUsuario",
                params: ["id(number)"],
                return: "any",
                lines: 5,
            },
            getContactoByIdUsuarioLeft: {
                public: true,
                async: true,
                name: "getContactoByIdUsuarioLeft",
                params: ["id(number)"],
                return: "any",
                lines: 8,
            },
        },
    },
    ContactoBaseService: {
        deps: ["Connection"],
        methods: {
            super: {
                public: true,
                async: false,
                name: "super",
                params: ["connection"],
                return: "any",
                lines: 1,
            },
            getContactos: {
                public: true,
                async: true,
                name: "getContactos",
                params: null,
                return: "",
            },
        },
    },
    EstadoEntity: {
        campos: {
            id: {
                primary: true,
                type: "int",
                name: "idEstado",
                nullable: false,
                entityName: "id",
                entityType: "number",
            },
            name: {
                primary: false,
                type: "varchar",
                name: "nombre",
                length: 30,
                nullable: true,
                default: null,
                entityName: "name",
                entityType: "string",
            },
        },
        indexs: {
            Primary: ['id'],
        },
        tabla: "estados",
        bd: "bbdd",
    },
    UsuarioModule: {
        imports: [""],
        controllers: ["UsuarioController"],
        providers: ["UsuarioService"],
        exports: ["UsuarioService"],
    },
    UsuarioController: {
        e2e: "usuarios",
        deps: ["UsuarioService"],
        methods: {
            get: {
                public: true,
                async: true,
                name: "get",
                params: null,
                return: "any",
                lines: 3,
            },
        },
    },
    UsuarioEntity: {
        campos: {
            id: {
                primary: true,
                type: "int",
                name: "idUsuario",
                nullable: false,
                entityName: "id",
                entityType: "number",
            },
            user: {
                primary: false,
                type: "varchar",
                name: "user",
                length: 30,
                nullable: false,
                entityName: "user",
                entityType: "string",
            },
            password: {
                primary: false,
                type: "varchar",
                name: "password",
                length: 20,
                nullable: false,
                entityName: "password",
                entityType: "string",
            },
            stateId: {
                primary: false,
                type: "int",
                name: "idEstado",
                nullable: false,
                entityName: "stateId",
                entityType: "number",
            },
        },
        indexs: {},
        tabla: "usuarios",
        bd: "DefaultDB",
    },
    UsuarioService: {
        deps: ["UsuarioEntity"],
        methods: {
            getUsuarios: {
                public: true,
                async: true,
                name: "getUsuarios",
                params: null,
                return: "",
                lines: 6,
            },
            getUsuariosLeft: {
                public: true,
                async: true,
                name: "getUsuariosLeft",
                params: null,
                return: "",
                lines: 32,
            },
        },
    },
    Connection: {},
};
